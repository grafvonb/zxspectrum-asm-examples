Sections:
00: "org0001:0" (0-42)


Source: "hp.asm"
                            	     1: ;hp - hex_print
                            	     2: ;prints value of d1 as 8 digit hex
                            	     3: start:
00:00000000 223CBCDEF123    	     4:         move.l  #$bcdef123,d1
00:00000006 6104            	     5:         bsr     print_8_dig_hex
                            	     6: 
00:00000008 7000            	     7:         clr.l   d0
00:0000000A 4E75            	     8:         rts
                            	     9: 
                            	    10: print_8_dig_hex:
00:0000000C 7007            	    11:         moveq   #7,d0                   ;set count for 8 digits
                            	    12: loop:
00:0000000E E999            	    13:         rol.l   #4,d1                   ;rotate nibble (4 bits) links, it puts highest nibble (at bits 28-31) into the 
00:00000010 2F01            	    14:         move.l  d1,-(a7)                ;backup d1 on stack
00:00000012 C23C000F        	    15:         and.b   #$0f,d1                 ;filter the lowest nibble
00:00000016 B23C0009        	    16:         cmp.b   #$9,d1                  ;check if higher as #$9
00:0000001A 6F02            	    17:         ble     it_is_digit             ;skip if digit
00:0000001C 5E01            	    18:         addq.b  #7,d1                   ;add #$7 to get ASCII character A-F
                            	    19: it_is_digit:
00:0000001E D23C0030        	    20:         add.b   #$30,d1                 ;add base for ASCII characters, "0"=$30
00:00000022 6108            	    21:         bsr     print_char              ;print character
00:00000024 221F            	    22:         move.l  (a7)+,d1                ;restore d1 from stack
00:00000026 51C8FFE6        	    23:         dbf     d0,loop                 ;loop for all digits
00:0000002A 4E75            	    24:         rts
                            	    25: 
                            	    26: print_char:
00:0000002C 48E7D0C0        	    27:         movem.l d0-d1/d3/a0-a1,-(a7)    ;backup regs on stack
00:00000030 207C00010001    	    28:         move.l  #$00010001,a0           ;define console channelId (internal QDOS code)
00:00000036 76FF            	    29:         moveq.l #-1,d3                  ;define timeout
00:00000038 7005            	    30:         moveq.l #5,d0                   ;IO.SBYTE (send byte)
00:0000003A 4E43            	    31:         trap    #3                      ;IO TRAP
00:0000003C 4CDF030B        	    32:         movem.l (a7)+,d0-d1/d3/a0-a1    ;restore regs from stack
00:00000040 4E75            	    33:         rts
                            	    34: 


Symbols by name:
it_is_digit                      A:0000001E
loop                             A:0000000E
print_8_dig_hex                  A:0000000C
print_char                       A:0000002C
start                            A:00000000

Symbols by value:
00000000 start
0000000C print_8_dig_hex
0000000E loop
0000001E it_is_digit
0000002C print_char
