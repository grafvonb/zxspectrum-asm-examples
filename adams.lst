# file opened: adams.asm
 1    0000                  device	zxspectrum48
 2    0000
 3    0000              ; const
 4    0000              ENTER = $0D
 5    0000
 6    0000                  org $8000
 7    8000 C3 10 80         jp start
 8    8003
 9    8003              data:
10    8003 48 65 6C 6C      db "Hello World!",ENTER
10    8007 6F 20 57 6F
10    800B 72 6C 64 21
10    800F 0D
11    8010              DATA_LENGTH = $ - data
12    8010
13    8010              start:
14    8010 CD 1F 80         call screen.clear
15    8013 C9               ret
16    8014 21 03 80         ld hl,data
17    8017 06 0D            ld b,DATA_LENGTH
18    8019              print_loop:
19    8019 7E               ld a,(hl)
20    801A D7               rst $10
21    801B 23               inc hl
22    801C 10 FB            djnz print_loop
23    801E C9               ret
24    801F
25    801F                  module screen
26    801F
27    801F              clear:
28    801F C5               push bc
29    8020 D5               push de
30    8021 E5               push hl
31    8022 21 00 40         ld hl,$4000     ; HL = start of screen bitmap
32    8025 11 01 40         ld de,$4001     ; DE = HL + 1
33    8028 01 FF 17         ld bc,$17FF     ; BC = length of screen bitmap ($4000 - $57FF)
34    802B 36 00            ld (hl),0       ; clear
35    802D ED B0            ldir            ; LDI while BC>0, LDI: (DE)=(HL), DE++, HL++, BC--
36    802F E1               pop hl
37    8030 D1               pop de
38    8031 C1               pop bc
39    8032 C9               ret
40    8033
41    8033                  endmodule
42    8033
43    8033
44    8033                  savesna "adams.sna",start
45    8033
# file closed: adams.asm
